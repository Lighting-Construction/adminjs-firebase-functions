name: CI/CD
on: 
  - push
  #- pull_request
jobs:
  setup:
    name: setup
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout
        uses: Lighting-Construction/checkout@v2
      - name: Setup
        uses: Lighting-Construction/setup-node@v1
        with:
          node-version: '12.x'
      # - uses: actions/cache@v1
      #   id: yarn-cache
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node_modules-
      - name: Install
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: Lighting-Construction/checkout@v2
      - name: Setup
        uses: Lighting-Construction/setup-node@v1
        with:
          node-version: '12.x'
      # - uses: actions/cache@v1
      #   id: yarn-cache
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node_modules-
      - name: Install
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test
      - name: Build
        run: yarn build
      - name: Release
        if: github.event_name == 'push'
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          GITHUB_TOKEN: ""  # ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ""
        run: yarn release

  # notify: 
  #   name: Notify
  #   runs-on: ubuntu-latest
  #   if: always()
  #   needs:
  #     - test
  #     - setup
  #   steps:
  #     - uses: technote-space/workflow-conclusion-action@v1
  #     - uses: 8398a7/action-slack@v3
  #       with:
  #         status: ${{ env.WORKFLOW_CONCLUSION }}
  #         fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  #       if: failure()